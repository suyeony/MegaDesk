<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAC9AAAAvQAXcxdI8AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAX4UlEQVR4Xu3da6xlZ13H8ZkWOp1e6I22TKEXSik01EJBC9amtDLFIq3crKBVoHdBoQEbEZRSIAUa
        o0jCC63GIOGSgJqgMWCaGBITNDHqC/CFRo2J8YXBiDEKUYHtszq0Paf5A/3vs9fa6/+szzf5vFkcZpb2
        dD+/nnmAfZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZKkXe1vrmre3/xe8wAAXRo+44fP+uEzf/js14K7uvlS
        swJgUb7YDENAC+tA84HmG030jQFA/77Z/EZzXKMFdFHzV030zQDA8gw/Cb6kUce9tvmvJvoGAGC5vtbc
        2bgb0FmnN59por/oAPCQP24ONeqgw82/NNFfaAB4tH9tXtqoaC76AbAuFwSLNlz0++sm+osKAI+VC4KF
        ctEPgE1yQXDmuegHwJhcEJxhLvoBMAUXBGeSi34ATM0FwS3noh8A2+SC4BZy0Q+AOXBBcKKGi35/0ER/
        EQBgW1wQHDEX/QCYMxcEN9xw0e+DzXDpIvp/+Cieed6ZqxuuufRhP3r4Oasnn3FS+LVjOudJp6xuaL/3
        zncBmLX2mTV8dkWfaWMaPqOHz+qd7zJ8lkdfO6LhrBrOrOHs0h6a/KLf4x939Orayy9a3XPHSx72lhuv
        Xp131qnh14/lqKP2r654zvmrd9527a53Aajg7tuvXR1+/jNWR7fPsugzbixnn3ny6s6fuGrXu7zi6ktW
        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
        kBe9X1UGgFQ2AyDBAAgYAHnR+1VlAEhlMwASDICAAZAXvV9VBoBUNgMgwQAIGAB50ftVZQBIZTMAEgyA
        gAGQF71fVQaAVDYDIMEACBgAedH7VWUASGUzABIMgIABkBe9X1UGgFQ2AyDBAAgYAHnR+1VlAEhlMwAS
        DICAAZAXvV9VBoBUNgMgwQAIGAB50ftVZQBIZTMAEgyAgAGQF71fVQaAVDYDIMEACBgAedH7VWUASGUz
        ABIMgIABkBe9X1UGgFQ2AyDBAAhUGQCf+9gvr+55602zEL1fVQaAVDYDIMEACFQZAIzDAJDKZgAkGAAB
        A2DZDACpbAZAggEQMACWzQCQymYAJBgAAQNg2QwAqWwGQIIBEDAAls0AkMpmACQYAAEDYNkMAKlsBkCC
        ARAwAJbNAJDKZgAkGACBe99224P/JTss01PPORR+XyQZANL0GQAJBgCMwwCQps8ASDAAYBwGgDR9BkCC
        AQDjMACk6TMAEgwAGIcBIE2fAZBgAMA4DABp+gyABAMAxmEASNNnACQYADAOA0CaPgMgwQCAcRgA0vQZ
        AAkGAIzjhY2kaTMAEgwAGMfTG0nTZgAkGACwef/RHNNImjYDIMEAgM37eCNp+gyABAMANuvrzcWNpOkz
        ABIMANisextJ28kASDAAYHM+2hzVSNpOBkCCAQB795XmzmZ/I2l7GQAJBkDg4LHHrI4/eGBUw+8R/d5J
        32j+na342+azzZua0xpJ288ASDAAAlW+AZrhm12SdCQDIMEACBgAklQyAyDBAAgYAJJUMgMgwQAIGACS
        VDIDIMEACBgAklQyAyDBAAgYAJJUMgMgwQAIGACSVDIDIMEACBgAklQyAyDBAAgYAJJUMgMgwQAIGACS
        VDIDIMEACBgAklQyAyDBAAgYAJJUMgMgwQAIGACSVDIDIMEACBgAklQyAyDBAAgYAJJUMgMgwQAIGACS
        VDIDIMEACBgAklQyAyDBAAgYAJJUMgMgwQAIGACSVDIDIMEACBgAklQyAyDBAAgYAJJUMgMgwQAIGACS
        VDIDIMEACIz9DfCx9926+r6Lzwt/7yQDQJIeac8D4NJnnrP66L23hJ/dm2IABJYwADZ4+A8MAEl6pD0P
        gMHYI8AACPQ+ADZ8+A8MAEl6pI0MgMGYI8AACPQ8AIbD/7KLnxr+fnvwd40k6UjDZ2L0WbmW4TN7+OyO
        PtP3wgAI9DoARvgn/4f8aSNJOtIXmuizcm1j/CTAAAj0OABG+if/h9zfSJKO9FtN9Fm5J5v+SYABEOht
        AIx8+A+uayRJR7q+iT4r92yTI8AACPQ0AEb8sf9Dvtgc3UiSjjR8Jn6piT4z92xTfxxgAAR6GQAT/JP/
        /zZXNpKk3V3V/F8TfXbu2SZ+EmAABHoYABMc/t9sfrqRJMUNn5HDZ2X0Gbpnex0BBkCg+gCY4Mf+wzf0
        nY0k6Tt3RzPaCNjLHwcYAIHKA8DhL0mza5YjwAAIVB0ADn9Jmm2zGwEGQKDiAHD4S9Lsm9UIMAAC1QaA
        w1+SyjSbEWAABCoNAIe/JJVrFiPAAAhUGQAOf0kq29ZHgAEQqDAAHP6SVL6tjgADIDD3AeDwl6Ru2toI
        MAACcx4ADn9J6q6tjAADIDDXAeDwl6Rum3wEGACBOQ4Ah78kdd+kI8AACMxtADj8JWkxTTYCDIDAnAaA
        w1+SFtckI8AACMxlALznZ17u8JekZTb6CHj3G18W/msZBkBgEwPgnEOnhs83xOEvSfNu+IwebQRs4owx
        AAKbGAAjcvhLUo1G/UnAXhkAgRkPAIe/JNVqtiPAAAjMdAA4/CWpZrMcAQZAYIYDwOEvSbWb3QgwAAIz
        GwAOf0nqo1mNAAMgMKMB4PCXpL6azQgwAAIzGQAOf0nqs1mMAAMgMIMB4PCXpL7b+ggwAAJbHgAOf0la
        RlsdAQZAYIsDwOEvSctqayPAAAhsaQA4/CVpmW1lBHQ3AF5+1SWrG665dE9OOHgg/LVH5PCXpGU3nAGT
        joDhrIvOwIzhzI1+7TWED3vn8JckDc3iPx2wJeHDnjn8JUk7W+oICB/2yuEvSYpa4ggIH/bI4S9J+k4t
        bQSED3vj8JckPZaWNALChz1x+EuSMi1lBIQPe+HwlySt0xJGQPiwBw5/SdJe6n0E7Pvaox70wOEvSdpE
        w1nS4wj4arPvH3c86IHDX5K0yXocAX/f7Pv4jgfVOfwlSWPU2x8HfLTZ97IdDypz+EuSxqynnwRc3+zb
        3/zFtx5U5fCXJE1RDyPgz5vh7H+wZzZfaaIvnDuHvyRpyir/ccB/Ns9qdnVl829N9G+Yq/9pbm0kSZqy
        4ewZzqDobJqrLzdXNGHnNb/bVFg2X2guayRJ2kYvaP6sic6oORnO9E815zbftac3dzUfaT7XPDATw39i
        4T2Ng1+SNJeGM+m9zXBGRWfXNny2Gc7wn2suaCRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiTpO7Rv3/8DofNn
        DPJ6Sb8AAAAASUVORK5CYII=
</value>
  </data>
</root>